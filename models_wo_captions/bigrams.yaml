# Configuration file for run_pipeline.py

# The below is an example of one fully-parameterized experiment document.
# Data pipeline and modeling pipeline settings are under the 'data' and 'model'
# keys, respectively. Note models take keyword parameters of their constructors.
# 
# ---
# data:
#   col_labels: 'category_id'
#   col_corpus: ['title', 'tags', 'description']
#   label_target: 'News & Politics'
#   label_others: []
#   splits: [0.4, 0.4, 0.2]
#   ngram_size: 1
#   vocab_size: 25000
#   batch_size: 64
#   cbow: False
# models:
#   - model: WordEmbAvg_2linear
#     embedding_dim: 100
#     hidden_dim: 50
#     output_dim: 1
#   - model: SimpleRNN
#     embedding_dim: 100
#     hidden_dim: 50
#     output_dim: 1
#   - model: LSTM
#     embedding_dim: 100
#     hidden_dim: 50
#     output_dim: 1
#     n_layers: 2
#     bidirectional: True
#     dropout: 0.5
#   - model: CNN
#     embedding_dim: 100
#     n_filters: 100
#     filter_sizes: [3, 4, 5]
#     output_dim: 1
#     dropout: 0.5
# decision_metric: 'loss'
# out_directory: 'example_experiment/'
# ---

data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Entertainment']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_entertainment/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Howto & Style']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_howto/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Comedy']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_comedy/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['People & Blogs']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_people/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Science & Technology']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_science/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Music']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_music/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Education']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_education/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Film & Animation']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_film/'
---
data:
  col_corpus: ['title', 'tags', 'description']
  label_target: 'News & Politics'
  label_others: ['Sports']
  ngram_size: 2
models:
  - model: WordEmbAvg_2linear
    embedding_dim: 100
    hidden_dim: 50
    output_dim: 1
  - model: CNN
    embedding_dim: 100
    n_filters: 200
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
  - model: CNN
    embedding_dim: 100
    n_filters: 100
    filter_sizes: [3, 4, 5]
    output_dim: 1
    dropout: 0.5
decision_metric: 'loss'
out_directory: 'bigrams/politics_sports/'
---
